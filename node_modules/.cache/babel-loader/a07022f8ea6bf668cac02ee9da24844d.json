{"ast":null,"code":"var _jsxFileName = \"/Users/pritivirajkumar/Documents/GitHub/Anu/src/views/Home/components/HeaderSearch/HeaderSearch.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel, Container, Checkbox, FormControl, FormGroup, FormControlLabel, FormLabel, FormHelperText, Select, MenuItem, TextField, Box, Collapse, Grid, Slider, Typography } from '@material-ui/core';\nimport { UncontrolledCollapse, CardBody } from 'reactstrap';\nimport SearchIcon from '@material-ui/icons/Search';\nimport testPhoto from './architectural-design-2957862.jpg';\nimport { Autocomplete } from '@material-ui/lab';\nimport { stat } from 'fs';\nimport Filter from '../Filter';\nimport Typewriter from 'typewriter-effect';\n\nclass HeaderSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      Tester: false,\n      toggleFilters: false,\n      range: [0, 100]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      root: {//paddingTop: 56,\n      }\n    }));\n\n    const handleChange2 = (event, newValue) => {\n      this.setState({ ...this.state,\n        ['range']: newValue\n      });\n    };\n\n    const defaultProps = {\n      options: top100Films,\n      getOptionLabel: option => option.title\n    };\n    const flatProps = {\n      options: top100Films.map(option => option.title)\n    };\n    const classes = useStyles;\n\n    const handleChange = name => event => {\n      this.setState({ ...this.state,\n        [name]: event.target.checked\n      });\n      console.log(this.state, event.target);\n    };\n\n    const toggleMoreFilters = () => {\n      var toggle = this.state.toggleFilters;\n      this.setState({ ...this.state,\n        ['toggleFilters']: !toggle\n      });\n      console.log(this.state);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        height: '100%',\n        marginTop: 80,\n        backgroundColor: 'white',\n        justifyContent: 'spaceBetween',\n        alignItems: 'center'\n      },\n      spacing: 4,\n      container: true,\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 6,\n      xl: 4,\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      style: {\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        fontWeight: 800\n      },\n      variant: 'h1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typewriter, {\n      options: {\n        autoStart: true,\n        loop: true\n      },\n      onInit: typewriter => {\n        typewriter.typeString('Need ').callFunction(() => {\n          console.log('String typed out!');\n        }).typeString('rice?').pauseFor(2500).deleteChars(5).pauseFor(1000).typeString('flour?').pauseFor(2500).deleteChars(6).pauseFor(1000).typeString('milk?').pauseFor(2500).deleteChars(6).pauseFor(1000).callFunction(() => {\n          console.log('All strings were deleted');\n        }).start();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        fontWeight: 900,\n        color: '#1A64F2',\n        paddingBottom: 15\n      },\n      variant: 'h1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Check the availability of your closest shops and pharmacies.\"), /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        fontWeight: 200,\n        color: '#6A7280'\n      },\n      variant: 'h4',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Find everything you need and reduce unnecessary movements to risk areas.\"), /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: 20\n      },\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 1,\n      style: {\n        width: '100%',\n        marginTop: 0,\n        paddingTop: 0,\n        marginLeft: 0,\n        paddingLeft: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      style: {\n        width: '100%',\n        marginTop: 0,\n        paddingTop: 0\n      },\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Beds\",\n        margin: \"normal\",\n        fullWidth: true,\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 68\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginBottom: 0,\n        height: 60\n      },\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, \"Search\"))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      xl: 8,\n      style: {\n        marginTop: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 500,\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: 500\n      },\n      src: \"https://i.ibb.co/NSRQCGX/basket.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }))))));\n  }\n\n}\n\nexport default HeaderSearch;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/pritivirajkumar/Documents/GitHub/Anu/src/views/Home/components/HeaderSearch/HeaderSearch.js"],"names":["React","useState","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","Container","Checkbox","FormControl","FormGroup","FormControlLabel","FormLabel","FormHelperText","Select","MenuItem","TextField","Box","Collapse","Grid","Slider","Typography","UncontrolledCollapse","CardBody","SearchIcon","testPhoto","Autocomplete","stat","Filter","Typewriter","HeaderSearch","Component","constructor","props","state","isGoing","numberOfGuests","Tester","toggleFilters","range","handleInputChange","bind","event","target","value","type","checked","name","setState","console","log","render","useStyles","theme","root","handleChange2","newValue","defaultProps","options","top100Films","getOptionLabel","option","title","flatProps","map","classes","handleChange","toggleMoreFilters","toggle","backgroundColor","height","marginTop","justifyContent","alignItems","margin","fontWeight","autoStart","loop","typewriter","typeString","callFunction","pauseFor","deleteChars","start","color","paddingBottom","display","width","paddingTop","marginLeft","paddingLeft","params","marginBottom","padding","year"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    TableSortLabel,\n    Container,\n    Checkbox,\n    FormControl,\n    FormGroup,\n    FormControlLabel,\n    FormLabel,\n    FormHelperText,\n    Select,\n    MenuItem,\n    TextField,\n    Box,\n    Collapse,\n    Grid,\n    Slider,\n    Typography\n  } from '@material-ui/core';\n  import { UncontrolledCollapse, CardBody} from 'reactstrap'\n  import SearchIcon from '@material-ui/icons/Search';\n  import testPhoto from './architectural-design-2957862.jpg';\n  import {Autocomplete} from '@material-ui/lab';\n  import { stat } from 'fs';\n  import Filter from '../Filter'\n  import Typewriter from 'typewriter-effect';\n\n  class HeaderSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isGoing: true,\n          numberOfGuests: 2,\n          Tester: false,\n          toggleFilters: false,\n          range: [0,100]\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n      }\n\n      \n    \n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }   \n    \n    render(){\n        const useStyles = makeStyles(theme => ({\n            root: {\n                //paddingTop: 56,\n                }\n            }\n        ));\n\n        const handleChange2 = (event, newValue) => {\n            this.setState({...this.state, ['range'] : newValue})\n        };\n        const defaultProps = {\n            options: top100Films,\n            getOptionLabel: option => option.title,\n        };\n        const flatProps = {\n            options: top100Films.map(option => option.title),\n        };\n        const classes = useStyles;\n        const handleChange = name => event => {\n            this.setState({ ...this.state, [name]: event.target.checked });\n            console.log(this.state, event.target)\n        };\n        const toggleMoreFilters = () =>{\n            var toggle = this.state.toggleFilters;\n            this.setState({...this.state, ['toggleFilters']:!toggle})\n            console.log(this.state)\n        }\n       \n        return(\n            <div style={{backgroundColor:'white'}}>\n                <Container>\n                    <Grid style={{height:'100%', marginTop:80, backgroundColor:'white', justifyContent:'spaceBetween', alignItems: 'center'}} spacing={4} container direction='row'>\n                        <Grid item lg={6} xl={4} style={{}}>\n                            <Container style={{margin:20}}>\n                                <Typography style={{fontWeight:800}} variant={'h1'}><Typewriter\n                                options={{\n                                    autoStart: true,\n                                    loop: true,\n                                }}\n                                onInit={(typewriter) => {\n                                    typewriter.typeString('Need ')\n                                    .callFunction(() => {\n                                        console.log('String typed out!');\n                                    })\n                                    .typeString('rice?')\n                                    .pauseFor(2500)\n                                    .deleteChars(5)\n                                    .pauseFor(1000)\n                                    .typeString('flour?')\n                                    .pauseFor(2500)\n                                    .deleteChars(6)\n                                    .pauseFor(1000)\n                                    .typeString('milk?')\n                                    .pauseFor(2500)\n                                    .deleteChars(6)\n                                    .pauseFor(1000)\n                                    .callFunction(() => {\n                                        console.log('All strings were deleted');\n                                    })\n                                    .start();\n                                }}\n                            /></Typography>\n                            <Typography style={{fontWeight:900, color:'#1A64F2', paddingBottom:15}} variant={'h1'}>Check the availability of your closest shops and pharmacies.</Typography>\n                            <Typography style={{fontWeight:200, color:'#6A7280'}} variant={'h4'}>Find everything you need and reduce unnecessary movements to risk areas.</Typography>\n                            <Grid style={{display:'flex', alignItems: 'center', marginTop:20}} direction='row'>\n                                <Grid item lg={9}> \n                                    <Box p={1} style={{ width: '100%', marginTop:0, paddingTop:0, marginLeft:0, paddingLeft: 0}}>\n                                        <Autocomplete\n                                            {...defaultProps}\n                                            id=\"debug\"\n                                            debug\n                                            style={{ width: '100%', marginTop:0, paddingTop:0}}\n                                            renderInput={params => <TextField {...params} label=\"Beds\" margin=\"normal\" fullWidth variant=\"outlined\" />}\n                                        />\n                                    </Box>\n                                </Grid>\n                            <Grid item lg={3}>\n                                <Button style={{marginBottom:0, height: 60}} variant=\"contained\" color=\"secondary\">\n                                    Search\n                                </Button>\n                                </Grid>\n                            </Grid>\n                            </Container>\n                            \n                        </Grid>       \n                        <Grid item lg={1}></Grid>         \n                        <Grid item lg={4} xl={8} style={{marginTop:0}}>\n                                        <div style={{width:500, padding:20}}>\n                                            <img style={{width: 500}} src=\"https://i.ibb.co/NSRQCGX/basket.png\"></img>\n                                            \n                                        </div>\n                        </Grid>\n                    </Grid>\n                </Container>\n                \n            </div>\n            \n        );\n    }\n    \n  }\n\n  export default HeaderSearch;\n\n  const top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n  ];"]},"metadata":{},"sourceType":"module"}