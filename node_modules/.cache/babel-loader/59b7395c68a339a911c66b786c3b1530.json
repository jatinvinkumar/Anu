{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateProfileOnFirestore = exports.updateProfileOnRTDB = exports.createAuthIsReady = exports.authIsReady = exports.getLoginMethodAndParams = undefined;\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _capitalize2 = require('lodash/capitalize');\n\nvar _capitalize3 = _interopRequireDefault(_capitalize2);\n\nexports.setupPresence = setupPresence;\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar createAuthProvider = function createAuthProvider(firebase, providerName, scopes) {\n  var capitalProviderName = (0, _capitalize3.default)(providerName) + 'AuthProvider';\n\n  if (!firebase.auth[capitalProviderName]) {\n    throw new Error(providerName + ' is not a valid auth provider for your firebase instance. If using react-native, use a RN specific auth library.');\n  }\n\n  var provider = new firebase.auth[capitalProviderName]();\n  var customAuthParameters = firebase._.config.customAuthParameters;\n\n  if (customAuthParameters && customAuthParameters[providerName]) {\n    provider.setCustomParameters(customAuthParameters[providerName]);\n  }\n\n  if (providerName.toLowerCase() === 'twitter' || !(0, _isFunction3.default)(provider.addScope)) {\n    return provider;\n  }\n\n  provider.addScope('email');\n\n  if (scopes) {\n    if ((0, _isArray3.default)(scopes)) {\n      scopes.forEach(function (scope) {\n        provider.addScope(scope);\n      });\n    }\n\n    if ((0, _isString3.default)(scopes)) {\n      provider.addScope(scopes);\n    }\n  }\n\n  return provider;\n};\n\nvar getLoginMethodAndParams = exports.getLoginMethodAndParams = function getLoginMethodAndParams(firebase, creds) {\n  var email = creds.email,\n      password = creds.password,\n      provider = creds.provider,\n      type = creds.type,\n      token = creds.token,\n      scopes = creds.scopes,\n      phoneNumber = creds.phoneNumber,\n      applicationVerifier = creds.applicationVerifier,\n      credential = creds.credential;\n\n  if (credential) {\n    var credentialAuth = firebase.auth().signInAndRetrieveDataWithCredential;\n\n    if (credentialAuth) {\n      return {\n        method: 'signInAndRetrieveDataWithCredential',\n        params: [credential]\n      };\n    }\n\n    return {\n      method: 'signInWithCredential',\n      params: [credential]\n    };\n  }\n\n  if (provider) {\n    if (_constants.supportedAuthProviders.indexOf(provider.toLowerCase()) === -1) {\n      throw new Error(provider + ' is not a valid Auth Provider');\n    }\n\n    if (token) {\n      throw new Error('provider with token no longer supported, use credential parameter instead');\n    }\n\n    var authProvider = createAuthProvider(firebase, provider, scopes);\n\n    if (type === 'popup') {\n      return {\n        method: 'signInWithPopup',\n        params: [authProvider]\n      };\n    }\n\n    return {\n      method: 'signInWithRedirect',\n      params: [authProvider]\n    };\n  }\n\n  if (token) {\n    var tokenAuth = firebase.auth().signInAndRetrieveDataWithCustomToken;\n\n    if (tokenAuth) {\n      return {\n        method: 'signInAndRetrieveDataWithCustomToken',\n        params: [token]\n      };\n    }\n\n    return {\n      method: 'signInWithCustomToken',\n      params: [token]\n    };\n  }\n\n  if (phoneNumber) {\n    if (!applicationVerifier) {\n      throw new Error('Application verifier is required for phone authentication');\n    }\n\n    return {\n      method: 'signInWithPhoneNumber',\n      params: [phoneNumber, applicationVerifier]\n    };\n  }\n\n  if (!firebase.auth().signInWithEmailAndPassword) {\n    return {\n      method: 'signInAndRetrieveDataWithEmailAndPassword',\n      params: [email, password]\n    };\n  }\n\n  return {\n    method: 'signInWithEmailAndPassword',\n    params: [email, password]\n  };\n};\n\nvar isAuthReady = function isAuthReady(store, stateName) {\n  var state = store.getState();\n  var firebaseState = stateName ? state[stateName] : state;\n  var firebaseAuthState = firebaseState && firebaseState.auth;\n\n  if (!firebaseAuthState) {\n    throw new Error('The Firebase auth state could not be found in the store under the attribute \\'' + (stateName ? stateName + '.' : '') + 'auth\\'. Make sure your react-redux-firebase reducer is correctly set in the store');\n  }\n\n  return firebaseState.auth.isLoaded;\n};\n\nvar authIsReady = exports.authIsReady = function authIsReady(store) {\n  var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'firebase';\n  return new Promise(function (resolve) {\n    if (isAuthReady(store, stateName)) {\n      resolve();\n    } else {\n      var unsubscribe = store.subscribe(function () {\n        if (isAuthReady(store, stateName)) {\n          unsubscribe();\n          resolve();\n        }\n      });\n    }\n  });\n};\n\nvar createAuthIsReady = exports.createAuthIsReady = function createAuthIsReady(store, config) {\n  return (0, _isFunction3.default)(config.authIsReady) ? config.authIsReady(store, config) : authIsReady(store, config.firebaseStateName);\n};\n\nvar updateProfileOnRTDB = exports.updateProfileOnRTDB = function updateProfileOnRTDB(firebase, profileUpdate) {\n  var database = firebase.database,\n      _firebase$_ = firebase._,\n      config = _firebase$_.config,\n      authUid = _firebase$_.authUid;\n  var profileRef = database().ref(config.userProfile + '/' + authUid);\n  return profileRef.update(profileUpdate).then(function () {\n    return profileRef.once('value');\n  });\n};\n\nvar updateProfileOnFirestore = exports.updateProfileOnFirestore = function updateProfileOnFirestore(firebase, profileUpdate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$useSet = options.useSet,\n      useSet = _options$useSet === undefined ? true : _options$useSet,\n      _options$merge = options.merge,\n      merge = _options$merge === undefined ? true : _options$merge;\n  var firestore = firebase.firestore,\n      _firebase$_2 = firebase._,\n      config = _firebase$_2.config,\n      authUid = _firebase$_2.authUid;\n  var profileRef = firestore().doc(config.userProfile + '/' + authUid);\n  var profileUpdatePromise = useSet ? profileRef.set(profileUpdate, {\n    merge: merge\n  }) : profileRef.update(profileUpdate);\n  return profileUpdatePromise.then(function () {\n    return profileRef.get();\n  });\n};\n\nfunction setupPresence(dispatch, firebase) {\n  if (!firebase.database || !firebase.database.ServerValue) {\n    return;\n  }\n\n  var ref = firebase.database().ref();\n  var _firebase$_3 = firebase._,\n      _firebase$_3$config = _firebase$_3.config,\n      presence = _firebase$_3$config.presence,\n      sessions = _firebase$_3$config.sessions,\n      authUid = _firebase$_3.authUid;\n  var amOnline = ref.child('.info/connected');\n  var onlineRef = ref.child((0, _isFunction3.default)(presence) ? presence(firebase.auth().currentUser, firebase) : presence).child(authUid);\n  var sessionsRef = (0, _isFunction3.default)(sessions) ? sessions(firebase.auth().currentUser, firebase) : sessions;\n\n  if (sessionsRef) {\n    sessionsRef = ref.child(sessions);\n  }\n\n  amOnline.on('value', function (snapShot) {\n    if (!snapShot.val()) return;\n\n    if (sessionsRef) {\n      dispatch({\n        type: _constants.actionTypes.SESSION_START,\n        payload: authUid\n      });\n      var session = sessionsRef.push({\n        startedAt: firebase.database.ServerValue.TIMESTAMP,\n        user: authUid\n      });\n\n      if ((0, _isFunction3.default)(session.setPriority)) {\n        session.setPriority(authUid);\n      }\n\n      session.child('endedAt').onDisconnect().set(firebase.database.ServerValue.TIMESTAMP, function () {\n        dispatch({\n          type: _constants.actionTypes.SESSION_END\n        });\n      });\n    }\n\n    onlineRef.set(true);\n    onlineRef.onDisconnect().remove();\n  });\n}","map":{"version":3,"sources":["/Users/pritivirajkumar/Documents/GitHub/Anu/node_modules/react-redux-firebase/es/utils/auth.js"],"names":["Object","defineProperty","exports","value","updateProfileOnFirestore","updateProfileOnRTDB","createAuthIsReady","authIsReady","getLoginMethodAndParams","undefined","_isFunction2","require","_isFunction3","_interopRequireDefault","_isString2","_isString3","_isArray2","_isArray3","_capitalize2","_capitalize3","setupPresence","_constants","obj","__esModule","default","createAuthProvider","firebase","providerName","scopes","capitalProviderName","auth","Error","provider","customAuthParameters","_","config","setCustomParameters","toLowerCase","addScope","forEach","scope","creds","email","password","type","token","phoneNumber","applicationVerifier","credential","credentialAuth","signInAndRetrieveDataWithCredential","method","params","supportedAuthProviders","indexOf","authProvider","tokenAuth","signInAndRetrieveDataWithCustomToken","signInWithEmailAndPassword","isAuthReady","store","stateName","state","getState","firebaseState","firebaseAuthState","isLoaded","arguments","length","Promise","resolve","unsubscribe","subscribe","firebaseStateName","profileUpdate","database","_firebase$_","authUid","profileRef","ref","userProfile","update","then","once","options","_options$useSet","useSet","_options$merge","merge","firestore","_firebase$_2","doc","profileUpdatePromise","set","get","dispatch","ServerValue","_firebase$_3","_firebase$_3$config","presence","sessions","amOnline","child","onlineRef","currentUser","sessionsRef","on","snapShot","val","actionTypes","SESSION_START","payload","session","push","startedAt","TIMESTAMP","user","setPriority","onDisconnect","SESSION_END","remove"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,wBAAR,GAAmCF,OAAO,CAACG,mBAAR,GAA8BH,OAAO,CAACI,iBAAR,GAA4BJ,OAAO,CAACK,WAAR,GAAsBL,OAAO,CAACM,uBAAR,GAAkCC,SAArJ;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACH,YAAD,CAAzC;;AAEA,IAAII,UAAU,GAAGH,OAAO,CAAC,iBAAD,CAAxB;;AAEA,IAAII,UAAU,GAAGF,sBAAsB,CAACC,UAAD,CAAvC;;AAEA,IAAIE,SAAS,GAAGL,OAAO,CAAC,gBAAD,CAAvB;;AAEA,IAAIM,SAAS,GAAGJ,sBAAsB,CAACG,SAAD,CAAtC;;AAEA,IAAIE,YAAY,GAAGP,OAAO,CAAC,mBAAD,CAA1B;;AAEA,IAAIQ,YAAY,GAAGN,sBAAsB,CAACK,YAAD,CAAzC;;AAEAhB,OAAO,CAACkB,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,UAAU,GAAGV,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASE,sBAAT,CAAgCS,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,QAA5B,EAAsCC,YAAtC,EAAoDC,MAApD,EAA4D;AACnF,MAAIC,mBAAmB,GAAG,CAAC,GAAGV,YAAY,CAACK,OAAjB,EAA0BG,YAA1B,IAA0C,cAApE;;AAEA,MAAI,CAACD,QAAQ,CAACI,IAAT,CAAcD,mBAAd,CAAL,EAAyC;AACvC,UAAM,IAAIE,KAAJ,CAAUJ,YAAY,GAAG,kHAAzB,CAAN;AACD;;AAED,MAAIK,QAAQ,GAAG,IAAIN,QAAQ,CAACI,IAAT,CAAcD,mBAAd,CAAJ,EAAf;AAEA,MAAII,oBAAoB,GAAGP,QAAQ,CAACQ,CAAT,CAAWC,MAAX,CAAkBF,oBAA7C;;AAEA,MAAIA,oBAAoB,IAAIA,oBAAoB,CAACN,YAAD,CAAhD,EAAgE;AAC9DK,IAAAA,QAAQ,CAACI,mBAAT,CAA6BH,oBAAoB,CAACN,YAAD,CAAjD;AACD;;AAED,MAAIA,YAAY,CAACU,WAAb,OAA+B,SAA/B,IAA4C,CAAC,CAAC,GAAGzB,YAAY,CAACY,OAAjB,EAA0BQ,QAAQ,CAACM,QAAnC,CAAjD,EAA+F;AAC7F,WAAON,QAAP;AACD;;AAEDA,EAAAA,QAAQ,CAACM,QAAT,CAAkB,OAAlB;;AAEA,MAAIV,MAAJ,EAAY;AACV,QAAI,CAAC,GAAGX,SAAS,CAACO,OAAd,EAAuBI,MAAvB,CAAJ,EAAoC;AAClCA,MAAAA,MAAM,CAACW,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC9BR,QAAAA,QAAQ,CAACM,QAAT,CAAkBE,KAAlB;AACD,OAFD;AAGD;;AACD,QAAI,CAAC,GAAGzB,UAAU,CAACS,OAAf,EAAwBI,MAAxB,CAAJ,EAAqC;AACnCI,MAAAA,QAAQ,CAACM,QAAT,CAAkBV,MAAlB;AACD;AACF;;AAED,SAAOI,QAAP;AACD,CAjCD;;AAmCA,IAAIxB,uBAAuB,GAAGN,OAAO,CAACM,uBAAR,GAAkC,SAASA,uBAAT,CAAiCkB,QAAjC,EAA2Ce,KAA3C,EAAkD;AAChH,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIX,QAAQ,GAAGS,KAAK,CAACT,QAFrB;AAAA,MAGIY,IAAI,GAAGH,KAAK,CAACG,IAHjB;AAAA,MAIIC,KAAK,GAAGJ,KAAK,CAACI,KAJlB;AAAA,MAKIjB,MAAM,GAAGa,KAAK,CAACb,MALnB;AAAA,MAMIkB,WAAW,GAAGL,KAAK,CAACK,WANxB;AAAA,MAOIC,mBAAmB,GAAGN,KAAK,CAACM,mBAPhC;AAAA,MAQIC,UAAU,GAAGP,KAAK,CAACO,UARvB;;AAUA,MAAIA,UAAJ,EAAgB;AACd,QAAIC,cAAc,GAAGvB,QAAQ,CAACI,IAAT,GAAgBoB,mCAArC;;AAEA,QAAID,cAAJ,EAAoB;AAClB,aAAO;AACLE,QAAAA,MAAM,EAAE,qCADH;AAELC,QAAAA,MAAM,EAAE,CAACJ,UAAD;AAFH,OAAP;AAID;;AACD,WAAO;AAAEG,MAAAA,MAAM,EAAE,sBAAV;AAAkCC,MAAAA,MAAM,EAAE,CAACJ,UAAD;AAA1C,KAAP;AACD;;AAED,MAAIhB,QAAJ,EAAc;AACZ,QAAIX,UAAU,CAACgC,sBAAX,CAAkCC,OAAlC,CAA0CtB,QAAQ,CAACK,WAAT,EAA1C,MAAsE,CAAC,CAA3E,EAA8E;AAC5E,YAAM,IAAIN,KAAJ,CAAUC,QAAQ,GAAG,+BAArB,CAAN;AACD;;AACD,QAAIa,KAAJ,EAAW;AACT,YAAM,IAAId,KAAJ,CAAU,2EAAV,CAAN;AACD;;AACD,QAAIwB,YAAY,GAAG9B,kBAAkB,CAACC,QAAD,EAAWM,QAAX,EAAqBJ,MAArB,CAArC;;AACA,QAAIgB,IAAI,KAAK,OAAb,EAAsB;AACpB,aAAO;AAAEO,QAAAA,MAAM,EAAE,iBAAV;AAA6BC,QAAAA,MAAM,EAAE,CAACG,YAAD;AAArC,OAAP;AACD;;AACD,WAAO;AAAEJ,MAAAA,MAAM,EAAE,oBAAV;AAAgCC,MAAAA,MAAM,EAAE,CAACG,YAAD;AAAxC,KAAP;AACD;;AAED,MAAIV,KAAJ,EAAW;AACT,QAAIW,SAAS,GAAG9B,QAAQ,CAACI,IAAT,GAAgB2B,oCAAhC;;AAEA,QAAID,SAAJ,EAAe;AACb,aAAO;AAAEL,QAAAA,MAAM,EAAE,sCAAV;AAAkDC,QAAAA,MAAM,EAAE,CAACP,KAAD;AAA1D,OAAP;AACD;;AAED,WAAO;AAAEM,MAAAA,MAAM,EAAE,uBAAV;AAAmCC,MAAAA,MAAM,EAAE,CAACP,KAAD;AAA3C,KAAP;AACD;;AAED,MAAIC,WAAJ,EAAiB;AACf,QAAI,CAACC,mBAAL,EAA0B;AACxB,YAAM,IAAIhB,KAAJ,CAAU,2DAAV,CAAN;AACD;;AACD,WAAO;AACLoB,MAAAA,MAAM,EAAE,uBADH;AAELC,MAAAA,MAAM,EAAE,CAACN,WAAD,EAAcC,mBAAd;AAFH,KAAP;AAID;;AAED,MAAI,CAACrB,QAAQ,CAACI,IAAT,GAAgB4B,0BAArB,EAAiD;AAC/C,WAAO;AACLP,MAAAA,MAAM,EAAE,2CADH;AAELC,MAAAA,MAAM,EAAE,CAACV,KAAD,EAAQC,QAAR;AAFH,KAAP;AAID;;AAED,SAAO;AAAEQ,IAAAA,MAAM,EAAE,4BAAV;AAAwCC,IAAAA,MAAM,EAAE,CAACV,KAAD,EAAQC,QAAR;AAAhD,GAAP;AACD,CAjED;;AAmEA,IAAIgB,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,SAA5B,EAAuC;AACvD,MAAIC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAZ;AACA,MAAIC,aAAa,GAAGH,SAAS,GAAGC,KAAK,CAACD,SAAD,CAAR,GAAsBC,KAAnD;AACA,MAAIG,iBAAiB,GAAGD,aAAa,IAAIA,aAAa,CAAClC,IAAvD;;AACA,MAAI,CAACmC,iBAAL,EAAwB;AACtB,UAAM,IAAIlC,KAAJ,CAAU,oFAAoF8B,SAAS,GAAGA,SAAS,GAAG,GAAf,GAAqB,EAAlH,IAAwH,mFAAlI,CAAN;AACD;;AACD,SAAOG,aAAa,CAAClC,IAAd,CAAmBoC,QAA1B;AACD,CARD;;AAUA,IAAI3D,WAAW,GAAGL,OAAO,CAACK,WAAR,GAAsB,SAASA,WAAT,CAAqBqD,KAArB,EAA4B;AAClE,MAAIC,SAAS,GAAGM,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB1D,SAAzC,GAAqD0D,SAAS,CAAC,CAAD,CAA9D,GAAoE,UAApF;AACA,SAAO,IAAIE,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC,QAAIX,WAAW,CAACC,KAAD,EAAQC,SAAR,CAAf,EAAmC;AACjCS,MAAAA,OAAO;AACR,KAFD,MAEO;AACL,UAAIC,WAAW,GAAGX,KAAK,CAACY,SAAN,CAAgB,YAAY;AAC5C,YAAIb,WAAW,CAACC,KAAD,EAAQC,SAAR,CAAf,EAAmC;AACjCU,UAAAA,WAAW;AACXD,UAAAA,OAAO;AACR;AACF,OALiB,CAAlB;AAMD;AACF,GAXM,CAAP;AAYD,CAdD;;AAgBA,IAAIhE,iBAAiB,GAAGJ,OAAO,CAACI,iBAAR,GAA4B,SAASA,iBAAT,CAA2BsD,KAA3B,EAAkCzB,MAAlC,EAA0C;AAC5F,SAAO,CAAC,GAAGvB,YAAY,CAACY,OAAjB,EAA0BW,MAAM,CAAC5B,WAAjC,IAAgD4B,MAAM,CAAC5B,WAAP,CAAmBqD,KAAnB,EAA0BzB,MAA1B,CAAhD,GAAoF5B,WAAW,CAACqD,KAAD,EAAQzB,MAAM,CAACsC,iBAAf,CAAtG;AACD,CAFD;;AAIA,IAAIpE,mBAAmB,GAAGH,OAAO,CAACG,mBAAR,GAA8B,SAASA,mBAAT,CAA6BqB,QAA7B,EAAuCgD,aAAvC,EAAsD;AAC5G,MAAIC,QAAQ,GAAGjD,QAAQ,CAACiD,QAAxB;AAAA,MACIC,WAAW,GAAGlD,QAAQ,CAACQ,CAD3B;AAAA,MAEIC,MAAM,GAAGyC,WAAW,CAACzC,MAFzB;AAAA,MAGI0C,OAAO,GAAGD,WAAW,CAACC,OAH1B;AAKA,MAAIC,UAAU,GAAGH,QAAQ,GAAGI,GAAX,CAAe5C,MAAM,CAAC6C,WAAP,GAAqB,GAArB,GAA2BH,OAA1C,CAAjB;AACA,SAAOC,UAAU,CAACG,MAAX,CAAkBP,aAAlB,EAAiCQ,IAAjC,CAAsC,YAAY;AACvD,WAAOJ,UAAU,CAACK,IAAX,CAAgB,OAAhB,CAAP;AACD,GAFM,CAAP;AAGD,CAVD;;AAYA,IAAI/E,wBAAwB,GAAGF,OAAO,CAACE,wBAAR,GAAmC,SAASA,wBAAT,CAAkCsB,QAAlC,EAA4CgD,aAA5C,EAA2D;AAC3H,MAAIU,OAAO,GAAGjB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB1D,SAAzC,GAAqD0D,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIkB,eAAe,GAAGD,OAAO,CAACE,MAA9B;AAAA,MACIA,MAAM,GAAGD,eAAe,KAAK5E,SAApB,GAAgC,IAAhC,GAAuC4E,eADpD;AAAA,MAEIE,cAAc,GAAGH,OAAO,CAACI,KAF7B;AAAA,MAGIA,KAAK,GAAGD,cAAc,KAAK9E,SAAnB,GAA+B,IAA/B,GAAsC8E,cAHlD;AAIA,MAAIE,SAAS,GAAG/D,QAAQ,CAAC+D,SAAzB;AAAA,MACIC,YAAY,GAAGhE,QAAQ,CAACQ,CAD5B;AAAA,MAEIC,MAAM,GAAGuD,YAAY,CAACvD,MAF1B;AAAA,MAGI0C,OAAO,GAAGa,YAAY,CAACb,OAH3B;AAKA,MAAIC,UAAU,GAAGW,SAAS,GAAGE,GAAZ,CAAgBxD,MAAM,CAAC6C,WAAP,GAAqB,GAArB,GAA2BH,OAA3C,CAAjB;AAEA,MAAIe,oBAAoB,GAAGN,MAAM,GAAGR,UAAU,CAACe,GAAX,CAAenB,aAAf,EAA8B;AAAEc,IAAAA,KAAK,EAAEA;AAAT,GAA9B,CAAH,GAAqDV,UAAU,CAACG,MAAX,CAAkBP,aAAlB,CAAtF;AACA,SAAOkB,oBAAoB,CAACV,IAArB,CAA0B,YAAY;AAC3C,WAAOJ,UAAU,CAACgB,GAAX,EAAP;AACD,GAFM,CAAP;AAGD,CAjBD;;AAmBA,SAAS1E,aAAT,CAAuB2E,QAAvB,EAAiCrE,QAAjC,EAA2C;AACzC,MAAI,CAACA,QAAQ,CAACiD,QAAV,IAAsB,CAACjD,QAAQ,CAACiD,QAAT,CAAkBqB,WAA7C,EAA0D;AACxD;AACD;;AACD,MAAIjB,GAAG,GAAGrD,QAAQ,CAACiD,QAAT,GAAoBI,GAApB,EAAV;AACA,MAAIkB,YAAY,GAAGvE,QAAQ,CAACQ,CAA5B;AAAA,MACIgE,mBAAmB,GAAGD,YAAY,CAAC9D,MADvC;AAAA,MAEIgE,QAAQ,GAAGD,mBAAmB,CAACC,QAFnC;AAAA,MAGIC,QAAQ,GAAGF,mBAAmB,CAACE,QAHnC;AAAA,MAIIvB,OAAO,GAAGoB,YAAY,CAACpB,OAJ3B;AAMA,MAAIwB,QAAQ,GAAGtB,GAAG,CAACuB,KAAJ,CAAU,iBAAV,CAAf;AACA,MAAIC,SAAS,GAAGxB,GAAG,CAACuB,KAAJ,CAAU,CAAC,GAAG1F,YAAY,CAACY,OAAjB,EAA0B2E,QAA1B,IAAsCA,QAAQ,CAACzE,QAAQ,CAACI,IAAT,GAAgB0E,WAAjB,EAA8B9E,QAA9B,CAA9C,GAAwFyE,QAAlG,EAA4GG,KAA5G,CAAkHzB,OAAlH,CAAhB;AACA,MAAI4B,WAAW,GAAG,CAAC,GAAG7F,YAAY,CAACY,OAAjB,EAA0B4E,QAA1B,IAAsCA,QAAQ,CAAC1E,QAAQ,CAACI,IAAT,GAAgB0E,WAAjB,EAA8B9E,QAA9B,CAA9C,GAAwF0E,QAA1G;;AACA,MAAIK,WAAJ,EAAiB;AACfA,IAAAA,WAAW,GAAG1B,GAAG,CAACuB,KAAJ,CAAUF,QAAV,CAAd;AACD;;AACDC,EAAAA,QAAQ,CAACK,EAAT,CAAY,OAAZ,EAAqB,UAAUC,QAAV,EAAoB;AACvC,QAAI,CAACA,QAAQ,CAACC,GAAT,EAAL,EAAqB;;AAErB,QAAIH,WAAJ,EAAiB;AACfV,MAAAA,QAAQ,CAAC;AAAEnD,QAAAA,IAAI,EAAEvB,UAAU,CAACwF,WAAX,CAAuBC,aAA/B;AAA8CC,QAAAA,OAAO,EAAElC;AAAvD,OAAD,CAAR;AAEA,UAAImC,OAAO,GAAGP,WAAW,CAACQ,IAAZ,CAAiB;AAC7BC,QAAAA,SAAS,EAAExF,QAAQ,CAACiD,QAAT,CAAkBqB,WAAlB,CAA8BmB,SADZ;AAE7BC,QAAAA,IAAI,EAAEvC;AAFuB,OAAjB,CAAd;;AAKA,UAAI,CAAC,GAAGjE,YAAY,CAACY,OAAjB,EAA0BwF,OAAO,CAACK,WAAlC,CAAJ,EAAoD;AAClDL,QAAAA,OAAO,CAACK,WAAR,CAAoBxC,OAApB;AACD;;AACDmC,MAAAA,OAAO,CAACV,KAAR,CAAc,SAAd,EAAyBgB,YAAzB,GAAwCzB,GAAxC,CAA4CnE,QAAQ,CAACiD,QAAT,CAAkBqB,WAAlB,CAA8BmB,SAA1E,EAAqF,YAAY;AAC/FpB,QAAAA,QAAQ,CAAC;AAAEnD,UAAAA,IAAI,EAAEvB,UAAU,CAACwF,WAAX,CAAuBU;AAA/B,SAAD,CAAR;AACD,OAFD;AAGD;;AAEDhB,IAAAA,SAAS,CAACV,GAAV,CAAc,IAAd;AACAU,IAAAA,SAAS,CAACe,YAAV,GAAyBE,MAAzB;AACD,GArBD;AAsBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateProfileOnFirestore = exports.updateProfileOnRTDB = exports.createAuthIsReady = exports.authIsReady = exports.getLoginMethodAndParams = undefined;\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _capitalize2 = require('lodash/capitalize');\n\nvar _capitalize3 = _interopRequireDefault(_capitalize2);\n\nexports.setupPresence = setupPresence;\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createAuthProvider = function createAuthProvider(firebase, providerName, scopes) {\n  var capitalProviderName = (0, _capitalize3.default)(providerName) + 'AuthProvider';\n\n  if (!firebase.auth[capitalProviderName]) {\n    throw new Error(providerName + ' is not a valid auth provider for your firebase instance. If using react-native, use a RN specific auth library.');\n  }\n\n  var provider = new firebase.auth[capitalProviderName]();\n\n  var customAuthParameters = firebase._.config.customAuthParameters;\n\n  if (customAuthParameters && customAuthParameters[providerName]) {\n    provider.setCustomParameters(customAuthParameters[providerName]);\n  }\n\n  if (providerName.toLowerCase() === 'twitter' || !(0, _isFunction3.default)(provider.addScope)) {\n    return provider;\n  }\n\n  provider.addScope('email');\n\n  if (scopes) {\n    if ((0, _isArray3.default)(scopes)) {\n      scopes.forEach(function (scope) {\n        provider.addScope(scope);\n      });\n    }\n    if ((0, _isString3.default)(scopes)) {\n      provider.addScope(scopes);\n    }\n  }\n\n  return provider;\n};\n\nvar getLoginMethodAndParams = exports.getLoginMethodAndParams = function getLoginMethodAndParams(firebase, creds) {\n  var email = creds.email,\n      password = creds.password,\n      provider = creds.provider,\n      type = creds.type,\n      token = creds.token,\n      scopes = creds.scopes,\n      phoneNumber = creds.phoneNumber,\n      applicationVerifier = creds.applicationVerifier,\n      credential = creds.credential;\n\n  if (credential) {\n    var credentialAuth = firebase.auth().signInAndRetrieveDataWithCredential;\n\n    if (credentialAuth) {\n      return {\n        method: 'signInAndRetrieveDataWithCredential',\n        params: [credential]\n      };\n    }\n    return { method: 'signInWithCredential', params: [credential] };\n  }\n\n  if (provider) {\n    if (_constants.supportedAuthProviders.indexOf(provider.toLowerCase()) === -1) {\n      throw new Error(provider + ' is not a valid Auth Provider');\n    }\n    if (token) {\n      throw new Error('provider with token no longer supported, use credential parameter instead');\n    }\n    var authProvider = createAuthProvider(firebase, provider, scopes);\n    if (type === 'popup') {\n      return { method: 'signInWithPopup', params: [authProvider] };\n    }\n    return { method: 'signInWithRedirect', params: [authProvider] };\n  }\n\n  if (token) {\n    var tokenAuth = firebase.auth().signInAndRetrieveDataWithCustomToken;\n\n    if (tokenAuth) {\n      return { method: 'signInAndRetrieveDataWithCustomToken', params: [token] };\n    }\n\n    return { method: 'signInWithCustomToken', params: [token] };\n  }\n\n  if (phoneNumber) {\n    if (!applicationVerifier) {\n      throw new Error('Application verifier is required for phone authentication');\n    }\n    return {\n      method: 'signInWithPhoneNumber',\n      params: [phoneNumber, applicationVerifier]\n    };\n  }\n\n  if (!firebase.auth().signInWithEmailAndPassword) {\n    return {\n      method: 'signInAndRetrieveDataWithEmailAndPassword',\n      params: [email, password]\n    };\n  }\n\n  return { method: 'signInWithEmailAndPassword', params: [email, password] };\n};\n\nvar isAuthReady = function isAuthReady(store, stateName) {\n  var state = store.getState();\n  var firebaseState = stateName ? state[stateName] : state;\n  var firebaseAuthState = firebaseState && firebaseState.auth;\n  if (!firebaseAuthState) {\n    throw new Error('The Firebase auth state could not be found in the store under the attribute \\'' + (stateName ? stateName + '.' : '') + 'auth\\'. Make sure your react-redux-firebase reducer is correctly set in the store');\n  }\n  return firebaseState.auth.isLoaded;\n};\n\nvar authIsReady = exports.authIsReady = function authIsReady(store) {\n  var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'firebase';\n  return new Promise(function (resolve) {\n    if (isAuthReady(store, stateName)) {\n      resolve();\n    } else {\n      var unsubscribe = store.subscribe(function () {\n        if (isAuthReady(store, stateName)) {\n          unsubscribe();\n          resolve();\n        }\n      });\n    }\n  });\n};\n\nvar createAuthIsReady = exports.createAuthIsReady = function createAuthIsReady(store, config) {\n  return (0, _isFunction3.default)(config.authIsReady) ? config.authIsReady(store, config) : authIsReady(store, config.firebaseStateName);\n};\n\nvar updateProfileOnRTDB = exports.updateProfileOnRTDB = function updateProfileOnRTDB(firebase, profileUpdate) {\n  var database = firebase.database,\n      _firebase$_ = firebase._,\n      config = _firebase$_.config,\n      authUid = _firebase$_.authUid;\n\n  var profileRef = database().ref(config.userProfile + '/' + authUid);\n  return profileRef.update(profileUpdate).then(function () {\n    return profileRef.once('value');\n  });\n};\n\nvar updateProfileOnFirestore = exports.updateProfileOnFirestore = function updateProfileOnFirestore(firebase, profileUpdate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$useSet = options.useSet,\n      useSet = _options$useSet === undefined ? true : _options$useSet,\n      _options$merge = options.merge,\n      merge = _options$merge === undefined ? true : _options$merge;\n  var firestore = firebase.firestore,\n      _firebase$_2 = firebase._,\n      config = _firebase$_2.config,\n      authUid = _firebase$_2.authUid;\n\n  var profileRef = firestore().doc(config.userProfile + '/' + authUid);\n\n  var profileUpdatePromise = useSet ? profileRef.set(profileUpdate, { merge: merge }) : profileRef.update(profileUpdate);\n  return profileUpdatePromise.then(function () {\n    return profileRef.get();\n  });\n};\n\nfunction setupPresence(dispatch, firebase) {\n  if (!firebase.database || !firebase.database.ServerValue) {\n    return;\n  }\n  var ref = firebase.database().ref();\n  var _firebase$_3 = firebase._,\n      _firebase$_3$config = _firebase$_3.config,\n      presence = _firebase$_3$config.presence,\n      sessions = _firebase$_3$config.sessions,\n      authUid = _firebase$_3.authUid;\n\n  var amOnline = ref.child('.info/connected');\n  var onlineRef = ref.child((0, _isFunction3.default)(presence) ? presence(firebase.auth().currentUser, firebase) : presence).child(authUid);\n  var sessionsRef = (0, _isFunction3.default)(sessions) ? sessions(firebase.auth().currentUser, firebase) : sessions;\n  if (sessionsRef) {\n    sessionsRef = ref.child(sessions);\n  }\n  amOnline.on('value', function (snapShot) {\n    if (!snapShot.val()) return;\n\n    if (sessionsRef) {\n      dispatch({ type: _constants.actionTypes.SESSION_START, payload: authUid });\n\n      var session = sessionsRef.push({\n        startedAt: firebase.database.ServerValue.TIMESTAMP,\n        user: authUid\n      });\n\n      if ((0, _isFunction3.default)(session.setPriority)) {\n        session.setPriority(authUid);\n      }\n      session.child('endedAt').onDisconnect().set(firebase.database.ServerValue.TIMESTAMP, function () {\n        dispatch({ type: _constants.actionTypes.SESSION_END });\n      });\n    }\n\n    onlineRef.set(true);\n    onlineRef.onDisconnect().remove();\n  });\n}"]},"metadata":{},"sourceType":"script"}