{"ast":null,"code":"import _objectSpread from \"/Users/jatinkumar/Desktop/Anupuam/Anu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jatinkumar/Desktop/Anupuam/Anu/src/views/Home/components/HeaderSearch/HeaderSearch.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel, Container, Checkbox, FormControl, FormGroup, FormControlLabel, FormLabel, FormHelperText, Select, MenuItem, TextField, Box, Collapse, Grid, Slider, Typography } from '@material-ui/core';\nimport { UncontrolledCollapse, CardBody } from 'reactstrap';\nimport SearchIcon from '@material-ui/icons/Search';\nimport testPhoto from './architectural-design-2957862.jpg';\nimport { Autocomplete } from '@material-ui/lab';\nimport { stat } from 'fs';\nimport Filter from '../Filter';\n\nclass HeaderSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      Tester: false,\n      toggleFilters: false,\n      range: [0, 100]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      root: {//paddingTop: 56,\n      }\n    }));\n\n    const handleChange2 = (event, newValue) => {\n      this.setState(_objectSpread({}, this.state, {\n        ['range']: newValue\n      }));\n    };\n\n    const defaultProps = {\n      options: top100Films,\n      getOptionLabel: option => option.title\n    };\n    const flatProps = {\n      options: top100Films.map(option => option.title)\n    };\n    const classes = useStyles;\n\n    const handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.checked\n      }));\n      console.log(this.state, event.target);\n    };\n\n    const toggleMoreFilters = () => {\n      var toggle = this.state.toggleFilters;\n      this.setState(_objectSpread({}, this.state, {\n        ['toggleFilters']: !toggle\n      }));\n      console.log(this.state);\n    };\n\n    return React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {},\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        height: 900\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        height: '100%'\n      },\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      xl: 3,\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })))))), React.createElement(Grid, {\n      style: {\n        overflow: 'hidden'\n      },\n      item: true,\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default HeaderSearch;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/jatinkumar/Desktop/Anupuam/Anu/src/views/Home/components/HeaderSearch/HeaderSearch.js"],"names":["React","useState","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","Container","Checkbox","FormControl","FormGroup","FormControlLabel","FormLabel","FormHelperText","Select","MenuItem","TextField","Box","Collapse","Grid","Slider","Typography","UncontrolledCollapse","CardBody","SearchIcon","testPhoto","Autocomplete","stat","Filter","HeaderSearch","Component","constructor","props","state","isGoing","numberOfGuests","Tester","toggleFilters","range","handleInputChange","bind","event","target","value","type","checked","name","setState","console","log","render","useStyles","theme","root","handleChange2","newValue","defaultProps","options","top100Films","getOptionLabel","option","title","flatProps","map","classes","handleChange","toggleMoreFilters","toggle","position","overflow","height","margin","year"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    TableSortLabel,\n    Container,\n    Checkbox,\n    FormControl,\n    FormGroup,\n    FormControlLabel,\n    FormLabel,\n    FormHelperText,\n    Select,\n    MenuItem,\n    TextField,\n    Box,\n    Collapse,\n    Grid,\n    Slider,\n    Typography\n  } from '@material-ui/core';\n  import { UncontrolledCollapse, CardBody} from 'reactstrap'\n  import SearchIcon from '@material-ui/icons/Search';\n  import testPhoto from './architectural-design-2957862.jpg';\n  import {Autocomplete} from '@material-ui/lab';\n  import { stat } from 'fs';\n  import Filter from '../Filter'\n  class HeaderSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isGoing: true,\n          numberOfGuests: 2,\n          Tester: false,\n          toggleFilters: false,\n          range: [0,100]\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n      }\n\n      \n    \n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }   \n    \n    render(){\n        const useStyles = makeStyles(theme => ({\n            root: {\n                //paddingTop: 56,\n                }\n            }\n        ));\n\n        const handleChange2 = (event, newValue) => {\n            this.setState({...this.state, ['range'] : newValue})\n        };\n        const defaultProps = {\n            options: top100Films,\n            getOptionLabel: option => option.title,\n        };\n        const flatProps = {\n            options: top100Films.map(option => option.title),\n        };\n        const classes = useStyles;\n        const handleChange = name => event => {\n            this.setState({ ...this.state, [name]: event.target.checked });\n            console.log(this.state, event.target)\n        };\n        const toggleMoreFilters = () =>{\n            var toggle = this.state.toggleFilters;\n            this.setState({...this.state, ['toggleFilters']:!toggle})\n            console.log(this.state)\n        }\n       \n        return(\n            <Grid container direction='column'>\n            <Grid style={{}} item>\n                <div style={{position:'relative', overflow:'hidden', height:900}} >\n                    <Grid style={{height:'100%'}} container justify='center' direction='column'>\n                        <Grid item lg={3} xl={3} style={{}}>\n                            <Container style={{margin:20}}><Filter></Filter></Container>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Grid>\n            <Grid style={{overflow:'hidden'}} item lg={3}>\n                \n            </Grid>\n        </Grid>\n        );\n    }\n    \n  }\n\n  export default HeaderSearch;\n\n  const top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n  ];"]},"metadata":{},"sourceType":"module"}