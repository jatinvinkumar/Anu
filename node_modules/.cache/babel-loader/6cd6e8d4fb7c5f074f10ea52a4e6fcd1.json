{"ast":null,"code":"var _jsxFileName = \"/Users/pritivirajkumar/Documents/GitHub/Anu/src/views/PropertySearch/components/Filter/Filter.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Button, Checkbox, FormControlLabel, TextField, Box, Collapse, Grid, Slider, Typography, List, ListSubheader, ListItem, ListText, ListItemText, Paper, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport { UncontrolledCollapse, CardBody } from 'reactstrap';\nimport { Autocomplete } from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.itemSearchTextChanged = e => {\n      this.setState({\n        itemSearchText: e.target.value\n      });\n    };\n\n    this.itemSearchItemDeleted = event => {\n      console.log(event.target.value);\n    };\n\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      Tester: false,\n      toggleFilters: false,\n      range: [0, 100],\n      itemSearchText: \"\",\n      groceryList: [\"Stawberries\"]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      root: {\n        paddingTop: 56\n      },\n      stickyList: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300\n      },\n      typeFilter: {\n        width: 300\n      }\n    }));\n\n    const handleChange2 = (event, newValue) => {\n      this.setState({ ...this.state,\n        ['range']: newValue\n      });\n    };\n\n    const defaultProps = {\n      options: top100Films,\n      getOptionLabel: option => option.title\n    };\n    const itemSearchProps = {\n      options: groceryItemList,\n      getOptionLabel: option => option.title\n    };\n    const flatProps = {\n      options: top100Films.map(option => option.title)\n    };\n    const classes = useStyles;\n\n    const handleChange = name => event => {\n      this.setState({ ...this.state,\n        [name]: event.target.checked\n      });\n      console.log(this.state, event.target);\n    };\n\n    const toggleMoreFilters = () => {\n      var toggle = this.state.toggleFilters;\n      this.setState({ ...this.state,\n        ['toggleFilters']: !toggle\n      });\n      console.log(this.state);\n    };\n\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        padding: 30,\n        paddingTop: 0\n      },\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justifyContent: \"space-between\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      xl: 3,\n      md: 3,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Activity Type\",\n        margin: \"normal\",\n        className: classes.typeFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 56\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      id: \"toggler\",\n      style: {\n        float: 'right'\n      },\n      onClick: toggleMoreFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"More Filters\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, itemSearchProps, {\n      id: \"debug\",\n      debug: true,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Search...\",\n        margin: \"normal\",\n        className: \"typeFilter\",\n        onChange: this.itemSearchTextChanged,\n        onKeyUp: event => {\n          if (event.key == 'Enter') this.setState({\n            groceryList: this.state.groceryList.concat([this.state.itemSearchText])\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 48\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, this.state.groceryList.map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"delete\",\n      onClick: () => {\n        newArr = this.state.groceryList.splice(index, 1);\n        this.setState({\n          groceryList: newArr\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }))))))), /*#__PURE__*/React.createElement(Collapse, {\n      toggler: \"#toggler\",\n      in: this.state.toggleFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"Amenities\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 38\n        }\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      variant: \"body1\",\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, \"From $\", this.state.range[0], \" per month to $\", this.state.range[1], \" per month\"), /*#__PURE__*/React.createElement(Slider, {\n      value: this.state.range,\n      onChange: handleChange2,\n      valueLabelDisplay: \"auto\",\n      \"aria-labelledby\": \"range-slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Filter;\nconst groceryItemList = [{\n  title: 'Eggs',\n  year: 1994\n}, {\n  title: 'Milk',\n  year: 1972\n}, {\n  title: 'Oranges',\n  year: 1974\n}];\nconst top100Films = [{\n  title: 'Groceries',\n  year: 1994\n}, {\n  title: 'Recreational',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/pritivirajkumar/Documents/GitHub/Anu/src/views/PropertySearch/components/Filter/Filter.js"],"names":["React","useState","makeStyles","Card","CardContent","Button","Checkbox","FormControlLabel","TextField","Box","Collapse","Grid","Slider","Typography","List","ListSubheader","ListItem","ListText","ListItemText","Paper","ListItemSecondaryAction","IconButton","UncontrolledCollapse","CardBody","Autocomplete","DeleteIcon","Filter","Component","constructor","props","itemSearchTextChanged","e","setState","itemSearchText","target","value","itemSearchItemDeleted","event","console","log","state","isGoing","numberOfGuests","Tester","toggleFilters","range","groceryList","handleInputChange","bind","type","checked","name","render","useStyles","theme","root","paddingTop","stickyList","width","maxWidth","backgroundColor","palette","background","paper","position","overflow","maxHeight","typeFilter","handleChange2","newValue","defaultProps","options","top100Films","getOptionLabel","option","title","itemSearchProps","groceryItemList","flatProps","map","classes","handleChange","toggleMoreFilters","toggle","padding","params","float","key","concat","item","index","newArr","splice","year"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardContent,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    TextField,\n    Box,\n    Collapse,\n    Grid,\n    Slider,\n    Typography,\n    List,\n    ListSubheader,\n    ListItem,\n    ListText,\n    ListItemText,\n    Paper,\n    ListItemSecondaryAction,\n    IconButton\n  } from '@material-ui/core';\n  import { UncontrolledCollapse, CardBody} from 'reactstrap'\n\n  import {Autocomplete} from '@material-ui/lab';\n\n  import DeleteIcon from '@material-ui/icons/Delete';\n\n  class Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isGoing: true,\n          numberOfGuests: 2,\n          Tester: false,\n          toggleFilters: false,\n          range: [0,100],\n          itemSearchText: \"\",\n          groceryList : [\"Stawberries\"]\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n      }\n\n      \n    \n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }   \n\n    itemSearchTextChanged = (e) => {\n        this.setState({itemSearchText: e.target.value})\n    }\n\n    itemSearchItemDeleted = (event) => {\n        console.log(event.target.value)\n    }\n\n    render(){\n        const useStyles = makeStyles(theme => ({\n            root: {\n                paddingTop: 56,\n            },\n            stickyList: {\n                width: '100%',\n                maxWidth: 360,\n                backgroundColor: theme.palette.background.paper,\n                position: 'relative',\n                overflow: 'auto',\n                maxHeight: 300,\n            },\n            typeFilter : {\n                width: 300,\n            }\n        }\n        ));\n\n        const handleChange2 = (event, newValue) => {\n            this.setState({...this.state, ['range'] : newValue})\n        };\n        const defaultProps = {\n            options: top100Films,\n            getOptionLabel: option => option.title,\n        };\n        const itemSearchProps = {\n            options: groceryItemList,\n            getOptionLabel: option => option.title,\n        };\n        const flatProps = {\n            options: top100Films.map(option => option.title),\n        };\n        const classes = useStyles;\n        const handleChange = name => event => {\n            this.setState({ ...this.state, [name]: event.target.checked });\n            console.log(this.state, event.target)\n        };\n        const toggleMoreFilters = () =>{\n            var toggle = this.state.toggleFilters;\n            this.setState({...this.state, ['toggleFilters']:!toggle})\n            console.log(this.state)\n        }\n       \n        return(\n            <Card style={{padding: 30, paddingTop: 0}} className={classes.root}>\n                 <div fullWidth>\n                    <Grid container spacing={4} justifyContent=\"space-between\" fullWidth>\n                        <Grid item lg={12} xl={3} md={3} sm={6} xs={12}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                renderInput={params => <TextField {...params} label=\"Activity Type\" margin=\"normal\" \n                                    className={classes.typeFilter}\n                                    />}\n                            />\n                        </Grid>\n                        {/* <Grid item lg={3} xl={3} md={3} sm={6} xs={12}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                \n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Grid>\n                        <Grid item lg={3} xl={3} md={3} sm={6} xs={12}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                \n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Grid>\n                        <Grid item lg={3} xl={3} md={3} sm={6} xs={12}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                \n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Grid> */}\n                    </Grid>\n                    <Button id=\"toggler\" style={{float: 'right', }} onClick={toggleMoreFilters}>More Filters</Button>\n                    <br></br>\n                    <Autocomplete\n                        {...itemSearchProps}\n                        id=\"debug\"\n                        debug\n                        renderInput={params => <TextField {...params} label=\"Search...\" margin=\"normal\" \n                            className=\"typeFilter\"\n                            onChange={this.itemSearchTextChanged}\n                            onKeyUp={(event) => {\n                                if (event.key== 'Enter')\n                                    this.setState({  \n                                        groceryList: this.state.groceryList.concat([this.state.itemSearchText])\n                                    })\n                            }}\n                            />}\n                    />\n\n                    {/* Add the list of items */}\n                    \n                    <Paper style={{maxHeight: 200, overflow: 'auto'}}>\n                        <List>\n                            {this.state.groceryList.map((item, index) => \n                                <ListItem>\n                        \n                                <ListItemText\n                                  primary={item}\n                                />\n                                <ListItemSecondaryAction >\n                                  <IconButton edge=\"end\" aria-label=\"delete\"\n                                        onClick={() => {\n                                            newArr = this.state.groceryList.splice(index, 1)\n                                            this.setState({\n                                                groceryList: newArr\n                                            })\n                                        }}\n                                        >\n                                    <DeleteIcon />\n                                  </IconButton>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            )}\n                        </List>\n                    </Paper>\n\n                    <Collapse toggler='#toggler' in={this.state.toggleFilters}>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                        variant=\"body1\"\n                        >\n                        Amenities\n                    </Typography>\n                    <Grid container spacing={1}>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                        <Grid  item lg={3} sm={4} xl={3} xs={12}>\n                            <FormControlLabel\n                            control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                            label=\"Hello\"\n                            onChange={this.handleChange}\n                            />\n                        </Grid>\n                    </Grid>\n                    </Collapse>\n\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                        variant=\"body1\"\n                        style={{paddingTop: 20}}\n                        >\n                        From ${this.state.range[0]} per month to ${this.state.range[1]} per month\n                    </Typography>\n                    <Slider\n                        value={this.state.range}\n                        onChange={handleChange2}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        \n                    />\n                    \n                 </div>\n            </Card>\n        );\n    }\n    \n  }\n\n  export default Filter;\n  const groceryItemList = [\n    { title: 'Eggs', year: 1994 },\n    { title: 'Milk', year: 1972 },\n    { title: 'Oranges', year: 1974 },\n  ];\n\n  const top100Films = [\n    { title: 'Groceries', year: 1994 },\n    { title: 'Recreational', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n  ];"]},"metadata":{},"sourceType":"module"}