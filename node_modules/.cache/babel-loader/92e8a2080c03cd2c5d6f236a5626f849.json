{"ast":null,"code":"import _objectSpread from \"/Users/jatinkumar/Desktop/react-material-dashboard-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jatinkumar/Desktop/react-material-dashboard-master/src/views/PropertySearch/components/Filter/Filter.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel, Container, Checkbox, FormControl, FormGroup, FormControlLabel, FormLabel, FormHelperText, Select, MenuItem, TextField, Box, Collapse } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { stat } from 'fs';\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      Tester: false,\n      toggleFilters: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  handleChange(name, event) {\n    //const target = event.target;\n    //const name = target.name;\n    //const value = target.type === 'checkbox' ? target.checked : target.value;\n    console.log(name, event); // this.setState({\n    //     [name]: value\n    // })\n  }\n\n  render() {\n    const defaultProps = {\n      options: top100Films,\n      getOptionLabel: option => option.title\n    };\n    const flatProps = {\n      options: top100Films.map(option => option.title)\n    };\n    const classes = this.useStyles;\n\n    const handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.checked\n      }));\n      console.log(this.state, event.target);\n    };\n\n    const toggleMoreFilters = () => {\n      var toggle = this.state.toggleFilters;\n      this.setState(_objectSpread({}, this.state, {\n        ['toggleFilters']: !toggle\n      }));\n      console.log(this.state);\n    };\n\n    return React.createElement(Card, {\n      style: {\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Box, {\n      p: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      style: {\n        width: 160\n      },\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"Neighborhood\",\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(Box, {\n      p: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      style: {\n        width: 160\n      },\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"Neighborhood\",\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Box, {\n      p: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      style: {\n        width: 160\n      },\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"Neighborhood\",\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), React.createElement(Box, {\n      p: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      style: {\n        width: 160\n      },\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"Neighborhood\",\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      onClick: toggleMoreFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"More Filters\"), React.createElement(Collapse, {\n      isOpen: toggleFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Filters\")), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Submit Form\")));\n  }\n\n}\n\nexport default Filter;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'LÃ©on: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALLÂ·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'AmÃ©lie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/jatinkumar/Desktop/react-material-dashboard-master/src/views/PropertySearch/components/Filter/Filter.js"],"names":["React","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","Container","Checkbox","FormControl","FormGroup","FormControlLabel","FormLabel","FormHelperText","Select","MenuItem","TextField","Box","Collapse","Autocomplete","stat","Filter","Component","constructor","props","state","isGoing","numberOfGuests","Tester","toggleFilters","handleInputChange","bind","event","target","value","type","checked","name","setState","console","log","handleChange","render","defaultProps","options","top100Films","getOptionLabel","option","title","flatProps","map","classes","useStyles","toggleMoreFilters","toggle","padding","width","params","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    TableSortLabel,\n    Container,\n    Checkbox,\n    FormControl,\n    FormGroup,\n    FormControlLabel,\n    FormLabel,\n    FormHelperText,\n    Select,\n    MenuItem,\n    TextField,\n    Box,\n    Collapse\n  } from '@material-ui/core';\n\n  import {Autocomplete} from '@material-ui/lab';\nimport { stat } from 'fs';\n\n  class Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isGoing: true,\n          numberOfGuests: 2,\n          Tester: false,\n          toggleFilters: false\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n      }\n      \n    \n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }\n\n    handleChange(name, event){\n        //const target = event.target;\n        //const name = target.name;\n        //const value = target.type === 'checkbox' ? target.checked : target.value;\n        console.log(name, event)\n        // this.setState({\n        //     [name]: value\n        // })\n    }   \n\n    render(){\n        const defaultProps = {\n            options: top100Films,\n            getOptionLabel: option => option.title,\n        };\n        const flatProps = {\n            options: top100Films.map(option => option.title),\n        };\n        const classes = this.useStyles;\n        const handleChange = name => event => {\n            this.setState({ ...this.state, [name]: event.target.checked });\n            console.log(this.state, event.target)\n        };\n        const toggleMoreFilters = () =>{\n            var toggle = this.state.toggleFilters;\n            this.setState({...this.state, ['toggleFilters']:!toggle})\n            console.log(this.state)\n        }\n        \n        return(\n            <Card style={{padding: 20}}>\n                 <FormControl fullWidth>\n                    <Box display='flex' justifyContent=\"space-between\" fullWidth>\n                        <Box p={1}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                style={{ width: 160}}\n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Box>\n                        <Box p={1}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                style={{ width: 160}}\n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Box>\n                        <Box p={1}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                style={{ width: 160}}\n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Box>\n                        <Box p={1}>\n                            <Autocomplete\n                                {...defaultProps}\n                                id=\"debug\"\n                                debug\n                                style={{ width: 160}}\n                                renderInput={params => <TextField {...params} label=\"Neighborhood\" margin=\"normal\" fullWidth />}\n                            />\n                        </Box>\n                    </Box>\n                    <Button onClick={toggleMoreFilters}>More Filters</Button>\n                    <Collapse isOpen={toggleFilters}>\n                        <p>Filters</p>\n                    </Collapse>\n                     <FormControlLabel\n                        control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                        label=\"Hello\"\n                        onChange={this.handleChange}\n                     />\n                    \n                     <Button type=\"Submit\" >Submit Form</Button>\n                 </FormControl>\n            </Card>\n        );\n    }\n    \n  }\n\n  export default Filter;\n\n  const top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'LÃ©on: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALLÂ·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'AmÃ©lie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n  ];"]},"metadata":{},"sourceType":"module"}