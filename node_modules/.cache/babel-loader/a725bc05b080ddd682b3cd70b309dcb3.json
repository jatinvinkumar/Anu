{"ast":null,"code":"import _objectSpread from \"/Users/jatinkumar/Desktop/react-material-dashboard-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jatinkumar/Desktop/react-material-dashboard-master/src/views/PropertySearch/components/Filter/Filter.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel, Container, Checkbox, FormControl, FormGroup, FormControlLabel, FormLabel, FormHelperText, Select, MenuItem, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      Tester: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  handleChange(name, event) {\n    //const target = event.target;\n    //const name = target.name;\n    //const value = target.type === 'checkbox' ? target.checked : target.value;\n    console.log(name, event); // this.setState({\n    //     [name]: value\n    // })\n  }\n\n  render() {\n    const defaultProps = {\n      options: top100Films,\n      getOptionLabel: option => option.title\n    };\n    const flatProps = {\n      options: top100Films.map(option => option.title)\n    };\n    const classes = this.useStyles;\n\n    const handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.checked\n      }));\n      console.log(this.state, event.target);\n    };\n\n    return React.createElement(Card, {\n      style: {\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        name: \"Tester\",\n        onChange: handleChange('Tester'),\n        value: \"Jatin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      label: \"Hello\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n      id: \"debug\",\n      debug: true,\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"debug\",\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Submit Form\")));\n  }\n\n}\n\nexport default Filter;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/jatinkumar/Desktop/react-material-dashboard-master/src/views/PropertySearch/components/Filter/Filter.js"],"names":["React","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","Container","Checkbox","FormControl","FormGroup","FormControlLabel","FormLabel","FormHelperText","Select","MenuItem","TextField","Autocomplete","Filter","Component","constructor","props","state","isGoing","numberOfGuests","Tester","handleInputChange","bind","event","target","value","type","checked","name","setState","console","log","handleChange","render","defaultProps","options","top100Films","getOptionLabel","option","title","flatProps","map","classes","useStyles","padding","params","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    TableSortLabel,\n    Container,\n    Checkbox,\n    FormControl,\n    FormGroup,\n    FormControlLabel,\n    FormLabel,\n    FormHelperText,\n    Select,\n    MenuItem,\n    TextField\n  } from '@material-ui/core';\n\n  import {Autocomplete} from '@material-ui/lab';\n\n  class Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isGoing: true,\n          numberOfGuests: 2,\n          Tester: false\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n      }\n      \n    \n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n        console.log(this.state)\n    }\n\n    handleChange(name, event){\n        //const target = event.target;\n        //const name = target.name;\n        //const value = target.type === 'checkbox' ? target.checked : target.value;\n        console.log(name, event)\n        // this.setState({\n        //     [name]: value\n        // })\n    }   \n\n    render(){\n        const defaultProps = {\n            options: top100Films,\n            getOptionLabel: option => option.title,\n          };\n        \n          const flatProps = {\n            options: top100Films.map(option => option.title),\n          };\n        const classes = this.useStyles;\n\n        const handleChange = name => event => {\n            this.setState({ ...this.state, [name]: event.target.checked });\n            console.log(this.state, event.target)\n          };\n        \n        return(\n            <Card style={{padding: 20}}>\n                 <FormControl>\n                     <FormControlLabel\n                        control={<Checkbox name=\"Tester\" onChange={handleChange('Tester')} value=\"Jatin\"/>}\n                        label=\"Hello\"\n                        onChange={this.handleChange}\n                     />\n                        <Autocomplete\n                        {...defaultProps}\n                        id=\"debug\"\n                        debug\n                        renderInput={params => <TextField {...params} label=\"debug\" margin=\"normal\" fullWidth />}\n                        />\n                     <Button type=\"Submit\" >Submit Form</Button>\n                 </FormControl>\n            </Card>\n        );\n    }\n    \n  }\n\n  export default Filter;\n\n  const top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n  ];"]},"metadata":{},"sourceType":"module"}