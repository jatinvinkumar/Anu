{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CarouselItem from './CarouselItem';\nimport { mapToCssModules } from './utils';\n\nvar Carousel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Carousel, _React$Component);\n\n  function Carousel(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_this));\n    _this.renderItems = _this.renderItems.bind(_assertThisInitialized(_this));\n    _this.hoverStart = _this.hoverStart.bind(_assertThisInitialized(_this));\n    _this.hoverEnd = _this.hoverEnd.bind(_assertThisInitialized(_this));\n    _this.state = {\n      activeIndex: _this.props.activeIndex,\n      direction: 'right',\n      indicatorClicked: false\n    };\n    return _this;\n  }\n\n  var _proto = Carousel.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      direction: this.state.direction\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Set up the cycle\n    if (this.props.ride === 'carousel') {\n      this.setInterval();\n    } // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n\n\n    document.addEventListener('keyup', this.handleKeyPress);\n  };\n\n  Carousel.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var newState = null;\n    var activeIndex = prevState.activeIndex,\n        direction = prevState.direction,\n        indicatorClicked = prevState.indicatorClicked;\n\n    if (nextProps.activeIndex !== activeIndex) {\n      // Calculate the direction to turn\n      if (nextProps.activeIndex === activeIndex + 1) {\n        direction = 'right';\n      } else if (nextProps.activeIndex === activeIndex - 1) {\n        direction = 'left';\n      } else if (nextProps.activeIndex < activeIndex) {\n        direction = indicatorClicked ? 'left' : 'right';\n      } else if (nextProps.activeIndex !== activeIndex) {\n        direction = indicatorClicked ? 'right' : 'left';\n      }\n\n      newState = {\n        activeIndex: nextProps.activeIndex,\n        direction: direction,\n        indicatorClicked: false\n      };\n    }\n\n    return newState;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeIndex === this.state.activeIndex) return;\n    this.setInterval(this.props);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearInterval();\n    document.removeEventListener('keyup', this.handleKeyPress);\n  };\n\n  _proto.setInterval = function (_setInterval) {\n    function setInterval() {\n      return _setInterval.apply(this, arguments);\n    }\n\n    setInterval.toString = function () {\n      return _setInterval.toString();\n    };\n\n    return setInterval;\n  }(function (props) {\n    if (props === void 0) {\n      props = this.props;\n    } // make sure not to have multiple intervals going...\n\n\n    this.clearInterval();\n\n    if (props.interval) {\n      this.cycleInterval = setInterval(function () {\n        props.next();\n      }, parseInt(props.interval, 10));\n    }\n  });\n\n  _proto.clearInterval = function (_clearInterval) {\n    function clearInterval() {\n      return _clearInterval.apply(this, arguments);\n    }\n\n    clearInterval.toString = function () {\n      return _clearInterval.toString();\n    };\n\n    return clearInterval;\n  }(function () {\n    clearInterval(this.cycleInterval);\n  });\n\n  _proto.hoverStart = function hoverStart() {\n    if (this.props.pause === 'hover') {\n      this.clearInterval();\n    }\n\n    if (this.props.mouseEnter) {\n      var _this$props;\n\n      (_this$props = this.props).mouseEnter.apply(_this$props, arguments);\n    }\n  };\n\n  _proto.hoverEnd = function hoverEnd() {\n    if (this.props.pause === 'hover') {\n      this.setInterval();\n    }\n\n    if (this.props.mouseLeave) {\n      var _this$props2;\n\n      (_this$props2 = this.props).mouseLeave.apply(_this$props2, arguments);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(evt) {\n    if (this.props.keyboard) {\n      if (evt.keyCode === 37) {\n        this.props.previous();\n      } else if (evt.keyCode === 39) {\n        this.props.next();\n      }\n    }\n  };\n\n  _proto.renderItems = function renderItems(carouselItems, className) {\n    var _this2 = this;\n\n    var slide = this.props.slide;\n    return React.createElement(\"div\", {\n      className: className\n    }, carouselItems.map(function (item, index) {\n      var isIn = index === _this2.state.activeIndex;\n      return React.cloneElement(item, {\n        in: isIn,\n        slide: slide\n      });\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props3 = this.props,\n        cssModule = _this$props3.cssModule,\n        slide = _this$props3.slide,\n        className = _this$props3.className;\n    var outerClasses = mapToCssModules(classNames(className, 'carousel', slide && 'slide'), cssModule);\n    var innerClasses = mapToCssModules(classNames('carousel-inner'), cssModule); // filter out booleans, null, or undefined\n\n    var children = this.props.children.filter(function (child) {\n      return child !== null && child !== undefined && typeof child !== 'boolean';\n    });\n    var slidesOnly = children.every(function (child) {\n      return child.type === CarouselItem;\n    }); // Rendering only slides\n\n    if (slidesOnly) {\n      return React.createElement(\"div\", {\n        className: outerClasses,\n        onMouseEnter: this.hoverStart,\n        onMouseLeave: this.hoverEnd\n      }, this.renderItems(children, innerClasses));\n    } // Rendering slides and controls\n\n\n    if (children[0] instanceof Array) {\n      var _carouselItems = children[0];\n      var _controlLeft = children[1];\n      var _controlRight = children[2];\n      return React.createElement(\"div\", {\n        className: outerClasses,\n        onMouseEnter: this.hoverStart,\n        onMouseLeave: this.hoverEnd\n      }, this.renderItems(_carouselItems, innerClasses), _controlLeft, _controlRight);\n    } // Rendering indicators, slides and controls\n\n\n    var indicators = children[0];\n\n    var wrappedOnClick = function wrappedOnClick(e) {\n      if (typeof indicators.props.onClickHandler === 'function') {\n        _this3.setState({\n          indicatorClicked: true\n        }, function () {\n          return indicators.props.onClickHandler(e);\n        });\n      }\n    };\n\n    var wrappedIndicators = React.cloneElement(indicators, {\n      onClickHandler: wrappedOnClick\n    });\n    var carouselItems = children[1];\n    var controlLeft = children[2];\n    var controlRight = children[3];\n    return React.createElement(\"div\", {\n      className: outerClasses,\n      onMouseEnter: this.hoverStart,\n      onMouseLeave: this.hoverEnd\n    }, wrappedIndicators, this.renderItems(carouselItems, innerClasses), controlLeft, controlRight);\n  };\n\n  return Carousel;\n}(React.Component);\n\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf(['carousel']),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  // eslint-disable-next-line react/no-unused-prop-types\n  interval: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  cssModule: PropTypes.object,\n  className: PropTypes.string\n};\nCarousel.defaultProps = {\n  interval: 5000,\n  pause: 'hover',\n  keyboard: true,\n  slide: true\n};\nCarousel.childContextTypes = {\n  direction: PropTypes.string\n};\nexport default Carousel;","map":{"version":3,"sources":["/Users/jatinkumar/Desktop/react-material-dashboard-master/node_modules/reactstrap/es/Carousel.js"],"names":["_assertThisInitialized","_inheritsLoose","React","PropTypes","classNames","CarouselItem","mapToCssModules","Carousel","_React$Component","props","_this","call","handleKeyPress","bind","renderItems","hoverStart","hoverEnd","state","activeIndex","direction","indicatorClicked","_proto","prototype","getChildContext","componentDidMount","ride","setInterval","document","addEventListener","getDerivedStateFromProps","nextProps","prevState","newState","componentDidUpdate","prevProps","componentWillUnmount","clearInterval","removeEventListener","_setInterval","apply","arguments","toString","interval","cycleInterval","next","parseInt","_clearInterval","pause","mouseEnter","_this$props","mouseLeave","_this$props2","evt","keyboard","keyCode","previous","carouselItems","className","_this2","slide","createElement","map","item","index","isIn","cloneElement","in","render","_this3","_this$props3","cssModule","outerClasses","innerClasses","children","filter","child","undefined","slidesOnly","every","type","onMouseEnter","onMouseLeave","Array","_carouselItems","_controlLeft","_controlRight","indicators","wrappedOnClick","e","onClickHandler","setState","wrappedIndicators","controlLeft","controlRight","Component","propTypes","number","func","isRequired","bool","oneOf","oneOfType","string","array","object","defaultProps","childContextTypes"],"mappings":"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","sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CarouselItem from './CarouselItem';\nimport { mapToCssModules } from './utils';\n\nvar Carousel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Carousel, _React$Component);\n\n  function Carousel(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_this));\n    _this.renderItems = _this.renderItems.bind(_assertThisInitialized(_this));\n    _this.hoverStart = _this.hoverStart.bind(_assertThisInitialized(_this));\n    _this.hoverEnd = _this.hoverEnd.bind(_assertThisInitialized(_this));\n    _this.state = {\n      activeIndex: _this.props.activeIndex,\n      direction: 'right',\n      indicatorClicked: false\n    };\n    return _this;\n  }\n\n  var _proto = Carousel.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      direction: this.state.direction\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Set up the cycle\n    if (this.props.ride === 'carousel') {\n      this.setInterval();\n    } // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n\n\n    document.addEventListener('keyup', this.handleKeyPress);\n  };\n\n  Carousel.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var newState = null;\n    var activeIndex = prevState.activeIndex,\n        direction = prevState.direction,\n        indicatorClicked = prevState.indicatorClicked;\n\n    if (nextProps.activeIndex !== activeIndex) {\n      // Calculate the direction to turn\n      if (nextProps.activeIndex === activeIndex + 1) {\n        direction = 'right';\n      } else if (nextProps.activeIndex === activeIndex - 1) {\n        direction = 'left';\n      } else if (nextProps.activeIndex < activeIndex) {\n        direction = indicatorClicked ? 'left' : 'right';\n      } else if (nextProps.activeIndex !== activeIndex) {\n        direction = indicatorClicked ? 'right' : 'left';\n      }\n\n      newState = {\n        activeIndex: nextProps.activeIndex,\n        direction: direction,\n        indicatorClicked: false\n      };\n    }\n\n    return newState;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeIndex === this.state.activeIndex) return;\n    this.setInterval(this.props);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearInterval();\n    document.removeEventListener('keyup', this.handleKeyPress);\n  };\n\n  _proto.setInterval = function (_setInterval) {\n    function setInterval() {\n      return _setInterval.apply(this, arguments);\n    }\n\n    setInterval.toString = function () {\n      return _setInterval.toString();\n    };\n\n    return setInterval;\n  }(function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    // make sure not to have multiple intervals going...\n    this.clearInterval();\n\n    if (props.interval) {\n      this.cycleInterval = setInterval(function () {\n        props.next();\n      }, parseInt(props.interval, 10));\n    }\n  });\n\n  _proto.clearInterval = function (_clearInterval) {\n    function clearInterval() {\n      return _clearInterval.apply(this, arguments);\n    }\n\n    clearInterval.toString = function () {\n      return _clearInterval.toString();\n    };\n\n    return clearInterval;\n  }(function () {\n    clearInterval(this.cycleInterval);\n  });\n\n  _proto.hoverStart = function hoverStart() {\n    if (this.props.pause === 'hover') {\n      this.clearInterval();\n    }\n\n    if (this.props.mouseEnter) {\n      var _this$props;\n\n      (_this$props = this.props).mouseEnter.apply(_this$props, arguments);\n    }\n  };\n\n  _proto.hoverEnd = function hoverEnd() {\n    if (this.props.pause === 'hover') {\n      this.setInterval();\n    }\n\n    if (this.props.mouseLeave) {\n      var _this$props2;\n\n      (_this$props2 = this.props).mouseLeave.apply(_this$props2, arguments);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(evt) {\n    if (this.props.keyboard) {\n      if (evt.keyCode === 37) {\n        this.props.previous();\n      } else if (evt.keyCode === 39) {\n        this.props.next();\n      }\n    }\n  };\n\n  _proto.renderItems = function renderItems(carouselItems, className) {\n    var _this2 = this;\n\n    var slide = this.props.slide;\n    return React.createElement(\"div\", {\n      className: className\n    }, carouselItems.map(function (item, index) {\n      var isIn = index === _this2.state.activeIndex;\n      return React.cloneElement(item, {\n        in: isIn,\n        slide: slide\n      });\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props3 = this.props,\n        cssModule = _this$props3.cssModule,\n        slide = _this$props3.slide,\n        className = _this$props3.className;\n    var outerClasses = mapToCssModules(classNames(className, 'carousel', slide && 'slide'), cssModule);\n    var innerClasses = mapToCssModules(classNames('carousel-inner'), cssModule); // filter out booleans, null, or undefined\n\n    var children = this.props.children.filter(function (child) {\n      return child !== null && child !== undefined && typeof child !== 'boolean';\n    });\n    var slidesOnly = children.every(function (child) {\n      return child.type === CarouselItem;\n    }); // Rendering only slides\n\n    if (slidesOnly) {\n      return React.createElement(\"div\", {\n        className: outerClasses,\n        onMouseEnter: this.hoverStart,\n        onMouseLeave: this.hoverEnd\n      }, this.renderItems(children, innerClasses));\n    } // Rendering slides and controls\n\n\n    if (children[0] instanceof Array) {\n      var _carouselItems = children[0];\n      var _controlLeft = children[1];\n      var _controlRight = children[2];\n      return React.createElement(\"div\", {\n        className: outerClasses,\n        onMouseEnter: this.hoverStart,\n        onMouseLeave: this.hoverEnd\n      }, this.renderItems(_carouselItems, innerClasses), _controlLeft, _controlRight);\n    } // Rendering indicators, slides and controls\n\n\n    var indicators = children[0];\n\n    var wrappedOnClick = function wrappedOnClick(e) {\n      if (typeof indicators.props.onClickHandler === 'function') {\n        _this3.setState({\n          indicatorClicked: true\n        }, function () {\n          return indicators.props.onClickHandler(e);\n        });\n      }\n    };\n\n    var wrappedIndicators = React.cloneElement(indicators, {\n      onClickHandler: wrappedOnClick\n    });\n    var carouselItems = children[1];\n    var controlLeft = children[2];\n    var controlRight = children[3];\n    return React.createElement(\"div\", {\n      className: outerClasses,\n      onMouseEnter: this.hoverStart,\n      onMouseLeave: this.hoverEnd\n    }, wrappedIndicators, this.renderItems(carouselItems, innerClasses), controlLeft, controlRight);\n  };\n\n  return Carousel;\n}(React.Component);\n\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf(['carousel']),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  // eslint-disable-next-line react/no-unused-prop-types\n  interval: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  cssModule: PropTypes.object,\n  className: PropTypes.string\n};\nCarousel.defaultProps = {\n  interval: 5000,\n  pause: 'hover',\n  keyboard: true,\n  slide: true\n};\nCarousel.childContextTypes = {\n  direction: PropTypes.string\n};\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}